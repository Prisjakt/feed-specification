"use strict";(self.webpackChunkfeed_specification=self.webpackChunkfeed_specification||[]).push([[3999],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>u});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),f=p(a),u=r,m=f["".concat(s,".").concat(u)]||f[u]||c[u]||i;return a?n.createElement(m,o(o({ref:t},d),{},{components:a})):n.createElement(m,o({ref:t},d))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}f.displayName="MDXCreateElement"},85099:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const i={sidebar_position:1},o="XML",l={unversionedId:"types-of-feeds/pull/file-formats/xml",id:"types-of-feeds/pull/file-formats/xml",title:"XML",description:"XML stands for eXtensinble Markup Language. It is very similar to HTML except it doesn't have any predefined tags. It's a meta language that allows you to define your own markup language which then can be used to store and share data in a structured manner.",source:"@site/docs/types-of-feeds/pull/file-formats/xml.md",sourceDirName:"types-of-feeds/pull/file-formats",slug:"/types-of-feeds/pull/file-formats/xml",permalink:"/types-of-feeds/pull/file-formats/xml",draft:!1,editUrl:"https://github.com/Prisjakt/feed-specification/tree/master/docs/types-of-feeds/pull/file-formats/xml.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"File Formats",permalink:"/types-of-feeds/pull/file-formats/"},next:{title:"CSV",permalink:"/types-of-feeds/pull/file-formats/csv"}},s={},p=[{value:"Namespaces",id:"namespaces",level:2},{value:"Priority When Parsed",id:"priority-when-parsed",level:4},{value:"Prisjakt XML Namespace",id:"prisjakt-xml-namespace",level:3},{value:"Use UTF-8",id:"use-utf-8",level:2},{value:"Use CDATA",id:"use-cdata",level:2}],d={toc:p};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"xml"},"XML"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/XML"},"XML")," stands for e",(0,r.kt)("strong",{parentName:"p"},"X"),"tensinble ",(0,r.kt)("strong",{parentName:"p"},"M"),"arkup ",(0,r.kt)("strong",{parentName:"p"},"L"),"anguage. It is very similar to HTML except it doesn't have any predefined tags. It's a meta language that allows you to define your own markup language which then can be used to store and share data in a structured manner."),(0,r.kt)("p",null,"Prisjakt XML feeds are based on the ",(0,r.kt)("a",{parentName:"p",href:"https://support.google.com/merchants/answer/7052112?hl=en"},"Google Product Data Specification")," which means that in most cases you can generate a Google Product feed and then send the link to us and let us consume it."),(0,r.kt)("h2",{id:"namespaces"},"Namespaces"),(0,r.kt)("p",null,"A Prisjakt feed should use two namespaces, the ",(0,r.kt)("inlineCode",{parentName:"p"},"g")," namespace which most fields belong to that are defined by the Google Product Specification and then the ",(0,r.kt)("inlineCode",{parentName:"p"},"pj")," namespace which contains some ",(0,r.kt)("a",{parentName:"p",href:"/terminology/prisjakt-specific-fields#offer-feeds"},"additional Prisjakt specific fields")," defined by us."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<rss xmlns:pj="https://schema.prisjakt.nu/ns/1.0" xmlns:g="http://base.google.com/ns/1.0" version="3.0">\n')),(0,r.kt)("p",null,"All fields stemming from the Google Product Data specification will use the ",(0,r.kt)("inlineCode",{parentName:"p"},"g:")," namespace prefix and the Prisjakt specific fields should use the ",(0,r.kt)("inlineCode",{parentName:"p"},"pj:")," prefix."),(0,r.kt)("h4",{id:"priority-when-parsed"},"Priority When Parsed"),(0,r.kt)("p",null,"If multiple fields with the same name but different namespaces exist, the field will be parsed with the following priority:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"pj:")," first eg. ",(0,r.kt)("inlineCode",{parentName:"li"},"<pj:some_field>100 SEK</pj:some_field>")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"g:")," second eg. ",(0,r.kt)("inlineCode",{parentName:"li"},"<g:some_field>100 SEK</g:some_field>")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"no namespace")," third eg. ",(0,r.kt)("inlineCode",{parentName:"li"},"<some_field>100 SEK</some_field>")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"other/unknown")," in undefined order eg. ",(0,r.kt)("inlineCode",{parentName:"li"},"<xyz:some_field>100 SEK</xyz:some_field>"))),(0,r.kt)("h3",{id:"prisjakt-xml-namespace"},"Prisjakt XML Namespace"),(0,r.kt)("p",null,"Our namespace definition file is located at the following URL:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"https://schema.prisjakt.nu/ns/1.0\n")),(0,r.kt)("h2",{id:"use-utf-8"},"Use UTF-8"),(0,r.kt)("p",null,"All XML feeds should start with the following header and the files should be properly ",(0,r.kt)("a",{parentName:"p",href:"/advanced/encoding/file-encoding"},"UTF-8 encoded"),"."),(0,r.kt)("p",null,"Do not use ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Control_character"},"control characters")," in feed file. We support some of them trying to follow ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Valid_characters_in_XML"},"XML spec")," but not guarantee to fully support it."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"<?xml version='1.0' encoding='UTF-8'?>\n")),(0,r.kt)("h2",{id:"use-cdata"},"Use CDATA"),(0,r.kt)("p",null,"You should lower the risk of your data causing xml parsers to fail because of invalid data by encoding your data correctly. Take a look on our ",(0,r.kt)("a",{parentName:"p",href:"/advanced/encoding/cdata"},"CDATA")," article to achieve this."))}c.isMDXComponent=!0}}]);