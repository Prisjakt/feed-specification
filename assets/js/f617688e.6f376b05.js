"use strict";(self.webpackChunkfeed_specification=self.webpackChunkfeed_specification||[]).push([[4304],{59119:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var i=n(74848),t=n(28453);const r={sidebar_position:1},a="XML",o={id:"types-of-feeds/pull/file-formats/xml",title:"XML",description:"XML stands for eXtensinble Markup Language. It is very similar to HTML except it doesn't have any predefined tags. It's a meta language that allows you to define your own markup language which then can be used to store and share data in a structured manner.",source:"@site/docs/types-of-feeds/pull/file-formats/xml.md",sourceDirName:"types-of-feeds/pull/file-formats",slug:"/types-of-feeds/pull/file-formats/xml",permalink:"/types-of-feeds/pull/file-formats/xml",draft:!1,unlisted:!1,editUrl:"https://github.com/Prisjakt/feed-specification/tree/master/docs/types-of-feeds/pull/file-formats/xml.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"File Formats",permalink:"/types-of-feeds/pull/file-formats/"},next:{title:"CSV",permalink:"/types-of-feeds/pull/file-formats/csv"}},l={},d=[{value:"Namespaces",id:"namespaces",level:2},{value:"Priority When Parsed",id:"priority-when-parsed",level:4},{value:"Prisjakt XML Namespace",id:"prisjakt-xml-namespace",level:3},{value:"Use UTF-8",id:"use-utf-8",level:2},{value:"Use CDATA",id:"use-cdata",level:2}];function c(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h1,{id:"xml",children:"XML"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"https://en.wikipedia.org/wiki/XML",children:"XML"})," stands for e",(0,i.jsx)(s.strong,{children:"X"}),"tensinble ",(0,i.jsx)(s.strong,{children:"M"}),"arkup ",(0,i.jsx)(s.strong,{children:"L"}),"anguage. It is very similar to HTML except it doesn't have any predefined tags. It's a meta language that allows you to define your own markup language which then can be used to store and share data in a structured manner."]}),"\n",(0,i.jsxs)(s.p,{children:["Prisjakt XML feeds are based on the ",(0,i.jsx)(s.a,{href:"https://support.google.com/merchants/answer/7052112?hl=en",children:"Google Product Data Specification"})," which means that in most cases you can generate a Google Product feed and then send the link to us and let us consume it."]}),"\n",(0,i.jsx)(s.h2,{id:"namespaces",children:"Namespaces"}),"\n",(0,i.jsxs)(s.p,{children:["A Prisjakt feed should use two namespaces, the ",(0,i.jsx)(s.code,{children:"g"})," namespace which most fields belong to that are defined by the Google Product Specification and then the ",(0,i.jsx)(s.code,{children:"pj"})," namespace which contains some ",(0,i.jsx)(s.a,{href:"/terminology/prisjakt-specific-fields#offer-feeds",children:"additional Prisjakt specific fields"})," defined by us."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-xml",children:'<rss xmlns:pj="https://schema.prisjakt.nu/ns/1.0" xmlns:g="http://base.google.com/ns/1.0" version="3.0">\n'})}),"\n",(0,i.jsxs)(s.p,{children:["All fields stemming from the Google Product Data specification will use the ",(0,i.jsx)(s.code,{children:"g:"})," namespace prefix and the Prisjakt specific fields should use the ",(0,i.jsx)(s.code,{children:"pj:"})," prefix."]}),"\n",(0,i.jsx)(s.h4,{id:"priority-when-parsed",children:"Priority When Parsed"}),"\n",(0,i.jsx)(s.p,{children:"If multiple fields with the same name but different namespaces exist, the field will be parsed with the following priority:"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"pj:"})," first eg. ",(0,i.jsx)(s.code,{children:"<pj:some_field>100 SEK</pj:some_field>"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"g:"})," second eg. ",(0,i.jsx)(s.code,{children:"<g:some_field>100 SEK</g:some_field>"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"no namespace"})," third eg. ",(0,i.jsx)(s.code,{children:"<some_field>100 SEK</some_field>"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"other/unknown"})," in undefined order eg. ",(0,i.jsx)(s.code,{children:"<xyz:some_field>100 SEK</xyz:some_field>"})]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"prisjakt-xml-namespace",children:"Prisjakt XML Namespace"}),"\n",(0,i.jsx)(s.p,{children:"Our namespace definition file is located at the following URL:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"https://schema.prisjakt.nu/ns/1.0\n"})}),"\n",(0,i.jsx)(s.h2,{id:"use-utf-8",children:"Use UTF-8"}),"\n",(0,i.jsxs)(s.p,{children:["All XML feeds should start with the following header and the files should be properly ",(0,i.jsx)(s.a,{href:"/advanced/encoding/file-encoding",children:"UTF-8 encoded"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["Do not use ",(0,i.jsx)(s.a,{href:"https://en.wikipedia.org/wiki/Control_character",children:"control characters"})," in feed file. We support some of them trying to follow ",(0,i.jsx)(s.a,{href:"https://en.wikipedia.org/wiki/Valid_characters_in_XML",children:"XML spec"})," but not guarantee to fully support it."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"<?xml version='1.0' encoding='UTF-8'?>\n"})}),"\n",(0,i.jsx)(s.h2,{id:"use-cdata",children:"Use CDATA"}),"\n",(0,i.jsxs)(s.p,{children:["You should lower the risk of your data causing xml parsers to fail because of invalid data by encoding your data correctly. Take a look on our ",(0,i.jsx)(s.a,{href:"/advanced/encoding/cdata",children:"CDATA"})," article to achieve this."]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>o});var i=n(96540);const t={},r=i.createContext(t);function a(e){const s=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(r.Provider,{value:s},e.children)}}}]);